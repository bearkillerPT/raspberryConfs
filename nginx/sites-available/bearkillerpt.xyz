##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
    if ($host = bearkillerpt.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 default_server;
	listen [::]:80 default_server;
	server_name bearkillerpt.xyz;
	return 301 https://$server_name$request_uri;


}
server {
	listen 443 ssl;
	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /home/pi/repos-website/build;

	# Add index.php to the list if you are using PHP
	index index.html;

	server_name bearkillerpt.xyz;
  	ssl_session_cache  builtin:1000  shared:SSL:10m;
  	ssl_protocols TLSv1.2;
  	ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
  	ssl_prefer_server_ciphers on;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404
     		proxy_pass http://127.0.0.1:3000;
     		proxy_set_header X-Real-IP $remote_addr;
     		proxy_set_header HOST $http_host;
		try_files $uri $uri/ =404;
		proxy_read_timeout  90;
	    	#proxy_redirect http://127.0.0.1:3000 https://bearkillerpt.xyz;		
	}

# Forward MQTT traffic (port 1883) to Mosquitto MQTT broker
     #location /mqtt {
     #    proxy_pass http://127.0.0.1:1883;
     #}

                     # Forward traffic on port 8081 to your desired service
     #location /custom {
     #    proxy_pass http://127.0.0.1:8081;
     #} 	

	

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.3-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}





    ssl_certificate /etc/letsencrypt/live/bearkillerpt.xyz-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/bearkillerpt.xyz-0001/privkey.pem; # managed by Certbot
}




server {
    if ($host = bearkillerpt.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    server_name pokemmobot.bearkillerpt.xyz; # managed by Certbot
	return 301 https://$server_name$request_uri;




    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/pokemmobot.bearkillerpt.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pokemmobot.bearkillerpt.xyz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
server {
    if ($host = pokemmobot.bearkillerpt.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot




	listen 80 ;
	listen [::]:80 ;
    server_name pokemmobot.bearkillerpt.xyz;
    return 404; # managed by Certbot


}